import{_ as s,o as n,c as a,a as o}from"./app.e4604e86.js";const A=JSON.parse('{"title":"106. Construct Binary Tree from Inorder and Postorder Traversal","description":"","frontmatter":{},"headers":[{"level":2,"title":"Problem Statement","slug":"problem-statement","link":"#problem-statement","children":[]},{"level":2,"title":"Solution:","slug":"solution","link":"#solution","children":[{"level":3,"title":"...","slug":"","link":"#","children":[]}]}],"relativePath":"solution/0101-0200/106 - Construct Binary Tree from Inorder and Postorder Traversal.md","lastUpdated":1680513503000}'),l={name:"solution/0101-0200/106 - Construct Binary Tree from Inorder and Postorder Traversal.md"},e=o("",17),p=[e];function r(t,c,D,y,i,C){return n(),a("div",null,p)}const d=s(l,[["render",r]]);export{A as __pageData,d as default};
