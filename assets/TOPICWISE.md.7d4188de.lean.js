import{_ as t,a as e}from"./chunks/dark.0b1a1d54.js";import{_ as r,c as n,o as a,a as i}from"./app.f44eba04.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"üèÜ Curated solutions to Leetcode problems in multiple languages to ace the Coding Interviews.","slug":"üèÜ-curated-solutions-to-leetcode-problems-in-multiple-languages-to-ace-the-coding-interviews","link":"#üèÜ-curated-solutions-to-leetcode-problems-in-multiple-languages-to-ace-the-coding-interviews","children":[{"level":3,"title":"üîç Press Ctrl+F or ‚åò+F to search for a specific problem","slug":"üîç-press-ctrl-f-or-‚åò-f-to-search-for-a-specific-problem","link":"#üîç-press-ctrl-f-or-‚åò-f-to-search-for-a-specific-problem","children":[]}]},{"level":2,"title":"Array","slug":"array","link":"#array","children":[]},{"level":2,"title":"String","slug":"string","link":"#string","children":[]},{"level":2,"title":"Hash Table","slug":"hash-table","link":"#hash-table","children":[]},{"level":2,"title":"Dynamic Programming","slug":"dynamic-programming","link":"#dynamic-programming","children":[]},{"level":2,"title":"Math","slug":"math","link":"#math","children":[]},{"level":2,"title":"Sorting","slug":"sorting","link":"#sorting","children":[]},{"level":2,"title":"Depth First Search","slug":"depth-first-search","link":"#depth-first-search","children":[]},{"level":2,"title":"Greedy","slug":"greedy","link":"#greedy","children":[]},{"level":2,"title":"Database","slug":"database","link":"#database","children":[]},{"level":2,"title":"Breadth First Search","slug":"breadth-first-search","link":"#breadth-first-search","children":[]},{"level":2,"title":"Tree","slug":"tree","link":"#tree","children":[]},{"level":2,"title":"Binary Search","slug":"binary-search","link":"#binary-search","children":[]},{"level":2,"title":"Matrix","slug":"matrix","link":"#matrix","children":[]},{"level":2,"title":"Binary Tree","slug":"binary-tree","link":"#binary-tree","children":[]},{"level":2,"title":"Two Pointers","slug":"two-pointers","link":"#two-pointers","children":[]},{"level":2,"title":"Bit Manipulation","slug":"bit-manipulation","link":"#bit-manipulation","children":[]},{"level":2,"title":"Stack","slug":"stack","link":"#stack","children":[]},{"level":2,"title":"Design","slug":"design","link":"#design","children":[]},{"level":2,"title":"Heap (Priority Queue)","slug":"heap-priority-queue","link":"#heap-priority-queue","children":[]},{"level":2,"title":"Graph","slug":"graph","link":"#graph","children":[]},{"level":2,"title":"Simulation","slug":"simulation","link":"#simulation","children":[]},{"level":2,"title":"Backtracking","slug":"backtracking","link":"#backtracking","children":[]},{"level":2,"title":"Prefix Sum","slug":"prefix-sum","link":"#prefix-sum","children":[]},{"level":2,"title":"Counting","slug":"counting","link":"#counting","children":[]},{"level":2,"title":"Sliding Window","slug":"sliding-window","link":"#sliding-window","children":[]},{"level":2,"title":"Linked List","slug":"linked-list","link":"#linked-list","children":[]},{"level":2,"title":"Union Find","slug":"union-find","link":"#union-find","children":[]},{"level":2,"title":"Ordered Set","slug":"ordered-set","link":"#ordered-set","children":[]},{"level":2,"title":"Monotonic Stack","slug":"monotonic-stack","link":"#monotonic-stack","children":[]},{"level":2,"title":"Recursion","slug":"recursion","link":"#recursion","children":[]},{"level":2,"title":"Trie","slug":"trie","link":"#trie","children":[]},{"level":2,"title":"Binary Search Tree","slug":"binary-search-tree","link":"#binary-search-tree","children":[]},{"level":2,"title":"Divide and Conquer","slug":"divide-and-conquer","link":"#divide-and-conquer","children":[]},{"level":2,"title":"Enumeration","slug":"enumeration","link":"#enumeration","children":[]},{"level":2,"title":"Bitmask","slug":"bitmask","link":"#bitmask","children":[]},{"level":2,"title":"Queue","slug":"queue","link":"#queue","children":[]},{"level":2,"title":"Memoization","slug":"memoization","link":"#memoization","children":[]},{"level":2,"title":"Geometry","slug":"geometry","link":"#geometry","children":[]},{"level":2,"title":"Topological Sort","slug":"topological-sort","link":"#topological-sort","children":[]},{"level":2,"title":"Segment Tree","slug":"segment-tree","link":"#segment-tree","children":[]},{"level":2,"title":"Game Theory","slug":"game-theory","link":"#game-theory","children":[]},{"level":2,"title":"Hash Function","slug":"hash-function","link":"#hash-function","children":[]},{"level":2,"title":"Binary Indexed Tree","slug":"binary-indexed-tree","link":"#binary-indexed-tree","children":[]},{"level":2,"title":"Interactive","slug":"interactive","link":"#interactive","children":[]},{"level":2,"title":"String Matching","slug":"string-matching","link":"#string-matching","children":[]},{"level":2,"title":"Rolling Hash","slug":"rolling-hash","link":"#rolling-hash","children":[]},{"level":2,"title":"Shortest Path","slug":"shortest-path","link":"#shortest-path","children":[]},{"level":2,"title":"Number Theory","slug":"number-theory","link":"#number-theory","children":[]},{"level":2,"title":"Data Stream","slug":"data-stream","link":"#data-stream","children":[]},{"level":2,"title":"Combinatorics","slug":"combinatorics","link":"#combinatorics","children":[]},{"level":2,"title":"Randomized","slug":"randomized","link":"#randomized","children":[]},{"level":2,"title":"Monotonic Queue","slug":"monotonic-queue","link":"#monotonic-queue","children":[]},{"level":2,"title":"Iterator","slug":"iterator","link":"#iterator","children":[]},{"level":2,"title":"Merge Sort","slug":"merge-sort","link":"#merge-sort","children":[]},{"level":2,"title":"Concurrency","slug":"concurrency","link":"#concurrency","children":[]},{"level":2,"title":"Doubly Linked List","slug":"doubly-linked-list","link":"#doubly-linked-list","children":[]},{"level":2,"title":"Brainteaser","slug":"brainteaser","link":"#brainteaser","children":[]},{"level":2,"title":"Probability and Statistics","slug":"probability-and-statistics","link":"#probability-and-statistics","children":[]},{"level":2,"title":"Quickselect","slug":"quickselect","link":"#quickselect","children":[]},{"level":2,"title":"Bucket Sort","slug":"bucket-sort","link":"#bucket-sort","children":[]},{"level":2,"title":"Suffix Array","slug":"suffix-array","link":"#suffix-array","children":[]},{"level":2,"title":"Minimum Spanning Tree","slug":"minimum-spanning-tree","link":"#minimum-spanning-tree","children":[]},{"level":2,"title":"Counting Sort","slug":"counting-sort","link":"#counting-sort","children":[]},{"level":2,"title":"Shell","slug":"shell","link":"#shell","children":[]},{"level":2,"title":"Line Sweep","slug":"line-sweep","link":"#line-sweep","children":[]},{"level":2,"title":"Reservoir Sampling","slug":"reservoir-sampling","link":"#reservoir-sampling","children":[]},{"level":2,"title":"Eulerian Circuit","slug":"eulerian-circuit","link":"#eulerian-circuit","children":[]},{"level":2,"title":"Radix Sort","slug":"radix-sort","link":"#radix-sort","children":[]},{"level":2,"title":"Strongly Connected Component","slug":"strongly-connected-component","link":"#strongly-connected-component","children":[]},{"level":2,"title":"Rejection Sampling","slug":"rejection-sampling","link":"#rejection-sampling","children":[]},{"level":2,"title":"Biconnected Component","slug":"biconnected-component","link":"#biconnected-component","children":[]}],"relativePath":"TOPICWISE.md","lastUpdated":1671952530000}'),l={name:"TOPICWISE.md"},s=t,d=e,g=i("",1),h=[g];function c(o,y,x,m,u,b){return a(),n("div",null,h)}const p=r(l,[["render",c]]);export{T as __pageData,p as default};
